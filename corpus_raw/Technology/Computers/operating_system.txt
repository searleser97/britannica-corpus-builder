operating system (OS),  program that manages a computer’s resources, especially the allocation of those resources among other programs. Typical resources include the central processing unit (CPU), computer memory, file storage, input/output (I/O) devices, and network connections. Management tasks include scheduling resource use to avoid conflicts and interference between programs. Unlike most programs, which complete a task and terminate, an operating system runs indefinitely and terminates only when the computer is turned off.
Modern multiprocessing operating systems allow many processes to be active, where each process is a “thread” of computation being used to execute a program. One form of multiprocessing is called time-sharing, which lets many users share computer access by rapidly switching between them. Time-sharing must guard against interference between users’ programs, and most systems use virtual memory, in which the memory, or “address space,” used by a program may reside in secondary memory (such as on a magnetic hard disk drive) when not in immediate use, to be swapped back to occupy the faster main computer memory on demand. This virtual memory both increases the address space available to a program and helps to prevent programs from interfering with each other, but it requires careful control by the operating system and a set of allocation tables to keep track of memory use. Perhaps the most delicate and critical task for a modern operating system is allocation of the CPU; each process is allowed to use the CPU for a limited time, which may be a fraction of a second, and then must give up control and become suspended until its next turn. Switching between processes must itself use the CPU while protecting all data of the processes.
The first digital computers had no operating systems. They ran one program at a time, which had command of all system resources, and a human operator would provide any special resources needed. The first operating systems were developed in the mid-1950s. These were small “supervisor programs” that provided basic I/O operations (such as controlling punch card readers and printers) and kept accounts of CPU usage for billing. Supervisor programs also provided multiprogramming capabilities to enable several programs to run at once. This was particularly important so that these early multimillion-dollar machines would not be idle during slow I/O operations.
Computers acquired more powerful operating systems in the 1960s with the emergence of time-sharing, which required a system to manage multiple users sharing CPU time and terminals. Two early time-sharing systems were CTSS (Compatible Time Sharing System), developed at the Massachusetts Institute of Technology, and the Dartmouth College Basic System, developed at Dartmouth College. Other multiprogrammed systems included Atlas, at the University of Manchester, England, and IBM’s OS/360, probably the most complex software package of the 1960s. After 1972 the Multics system for General Electric Co.’s GE 645 computer (and later for Honeywell Inc.’s computers) became the most sophisticated system, with most of the multiprogramming and time-sharing capabilities that later became standard.
The minicomputers of the 1970s had limited memory and required smaller operating systems. The most important operating system of that period was UNIX, developed by AT&T for large minicomputers as a simpler alternative to Multics. It became widely used in the 1980s, in part because it was free to universities and in part because it was designed with a set of tools that were powerful in the hands of skilled programmers. More recently, Linux, an open-source version of UNIX developed in part by a group led by Finnish computer science student Linus Torvalds and in part by a group led by American computer programmer Richard Stallman, has become popular on personal computers as well as on larger computers.
In addition to such general-purpose systems, special-purpose operating systems run on small computers that control assembly lines, aircraft, and even home appliances. They are real-time systems, designed to provide rapid response to sensors and to use their inputs to control machinery. Operating systems have also been developed for mobile devices such as smartphones and tablets. Apple Inc.’s iOS, which runs on iPhones and iPads, and Google Inc.’s Android are two prominent mobile operating systems.
From the standpoint of a user or an application program, an operating system provides services. Some of these are simple user commands like “dir”—show the files on a disk—while others are low-level “system calls” that a graphics program might use to display an image. In either case the operating system provides appropriate access to its objects, the tables of disk locations in one case and the routines to transfer data to the screen in the other. Some of its routines, those that manage the CPU and memory, are generally accessible only to other portions of the operating system.
Contemporary operating systems for personal computers commonly provide a graphical user interface (GUI). The GUI may be an intrinsic part of the system, as in the older versions of Apple’s Mac OS and Microsoft Corporation’s Windows OS; in others it is a set of programs that depend on an underlying system, as in the X Window system for UNIX and Apple’s Mac OS X.
Operating systems also provide network services and file-sharing capabilities—even the ability to share resources between systems of different types, such as Windows and UNIX. Such sharing has become feasible through the introduction of network protocols (communication rules) such as the Internet’s TCP/IP.
