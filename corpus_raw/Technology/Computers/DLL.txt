DLL, in full dynamic link library,  a file containing code for commonly used program functions on personal computers (PCs) that run the Microsoft Corporation’s Windows operating system.
Linking is part of the process of creating a computer program in which programmers combine their new program codes with preexisting code libraries (special functions, such as printing a document, that are used often). Static linking, the process traditionally used in many operating systems, puts everything together into the executable program. Dynamic linking, on the other hand, stores code libraries in DLL files. The functions in these files are then accessed by different running programs only when needed. Dynamic linking results in programs that use less memory and disk space and that are easier to upgrade. Without dynamic linking, making changes to part of a code library—for example, a dialog box for saving a file—would mean making changes to every statically linked program that uses it. With dynamic linking, only the DLL needs to be changed.
Despite these advantages, dynamic linking has some trade-offs. Gains in efficiency are sometimes offset by losses in the stability of a program. In the past a newly installed program might occasionally have replaced an existing DLL, which sometimes caused existing programs to crash or behave oddly, a situation programmers call “DLL hell.” To avoid these problems, Windows relies on protected DLLs and Windows file protection (WFP). Protected DLLs are updated only by Microsoft, and if one is replaced by some other source, Windows reverts the DLL back to the original version. An official update can still introduce bugs, though it is unlikely to do so.
