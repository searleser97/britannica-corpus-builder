Zuse computer,  any of a series of computers designed and built in Germany during the 1930s and ’40s by the German engineer Konrad Zuse. He had been thinking about designing a better calculating machine, but he was advised by a calculator manufacturer in 1937 that the field was a dead end and that every computing problem had already been solved. Zuse had something else in mind, though.
For one thing, Zuse worked in binary from the beginning. All of his prototype machines, built in 1936, used binary representation in order to simplify construction. This had the added advantage of making the connection with logic clearer, and Zuse worked out the details of how the operations of logic (e.g., AND, OR, and NOT) could be mapped onto the design of the computer’s circuits. (English mathematician George Boole had shown the connection between logic and mathematics in the mid-19th century, developing an algebra of logic now known as Boolean algebra.) Zuse also spent more time than his predecessors and contemporaries developing software for his computer, the language in which it was to be programmed. Although all his early prewar machines were really calculators—not computers—his Z3, completed in December 1941 (and destroyed on April 6, 1945, during an Allied air raid on Berlin), was the first program-controlled processor.
Because all Zuse’s work was done in relative isolation, he knew little about work on computers in the United States and England, and, when the war began, his isolation became complete.
Zuse began construction of the Z4 in 1943 with funding from the German Air Ministry. Like his Z3, the Z4 used electromechanical relays, in part because of the difficulty in acquiring the roughly 2,000 necessary vacuum tubes in wartime Germany. The Z4 was evacuated from Berlin in early 1945, and it eventually wound up in Hinterstein, a small village in the Bavarian Alps, where it remained until Zuse brought it to the Federal Technical Institute in Zürich, Switz., for refurbishing in 1950. Although unable to continue with hardware development, Zuse made a number of advances in software design.
Zuse’s use of floating-point representation for numbers—the significant digits, known as the mantissa, are stored separately from a pointer to the decimal point, known as the exponent, allowing a very large range of numbers to be handled—was far ahead of its time. In addition, Zuse developed a rich set of instructions, handled infinite values correctly, and included a “no-op”—that is, an instruction that did nothing. Only significant experience in programming would show the need for something so apparently useless.
The Z4’s program was punched on used movie film and was separate from the mechanical memory for data (in other words, there was no stored program). The machine was relatively reliable (it normally ran all night unattended), but it had no decision-making ability. Addition took 0.5 to 1.25 seconds, multiplication 3.5 seconds.
Zuse also developed the first real computer programming language, Plankalkül (“Plan Calculus”), in 1944–45. Zuse’s language allowed for the creation of procedures (also called routines or subroutines; stored chunks of code that could be invoked repeatedly to perform routine operations such as taking a square root) and structured data (such as a record in a database, with a mixture of alphabetic and numeric data representing, for instance, name, address, and birth date). In addition, it provided conditional statements that could modify program execution, as well as repeat, or loop, statements that would cause a marked block of statements or a subroutine to be repeated a specified number of times or for as long as some condition held.
Zuse knew that computers could do more than arithmetic, but he was aware of the propensity of anyone introduced to them to view them as nothing more than calculators. So he took pains to demonstrate nonnumeric solutions with Plankalkül. He wrote programs to check the syntactical correctness of Boolean expressions (an application in logic and text handling) and even to check chess moves.
Unlike flowcharts, Zuse’s program was no intermediate language intended for pencil-and-paper translation by mathematicians. It was deliberately intended for machine translation (that is, into machine language), and Zuse did some work toward implementing a translator for Plankalkül. He did not get very far, however; he had to disassemble his machine near the end of the war and was not able to put it back together for several years. Unfortunately, his computer language and his work, which were roughly a dozen years ahead of their time, were not generally known outside Germany.
